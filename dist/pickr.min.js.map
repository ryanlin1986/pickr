{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///../src/NanoPop.ts","webpack:///./src/js/pickr.js","webpack:///./src/js/template.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","eventListener","method","elements","events","fn","options","HTMLCollection","NodeList","Array","from","isArray","el","ev","capture","slice","arguments","on","off","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","createFromTemplate","str","removeAttribute","getAttribute","resolve","element","base","con","subtree","child","children","arr","sub","push","keys","length","eventPath","evt","path","composedPath","target","parentElement","resolveElement","val","Element","split","reduce","pv","cv","ci","a","querySelector","shadowRoot","adjustableInputNumbers","mapper","v","handleScroll","e","inc","Number","shiftKey","ctrlKey","deltaY","index","selectionStart","replace","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","max","floor","round","Math","hsvToRgb","h","f","q","mod","hsvToHsl","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","isNaN","hexToHsv","hex","match","map","parseInt","parseToHSVA","toLowerCase","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","hexa","numarize","array","test","undefined","invalid","type","exec","alphaValid","values","join","raw","substring","HSVaColor","original","next","precision","toFixed","that","toHSVA","toString","toHSLA","toRGBA","toCMYK","rgb","hsvToCmyk","toHEXA","padStart","hsvToHex","alpha","toUpperCase","clone","clamp","Moveable","opt","assign","lock","onchange","onstop","_keyboard","activeElement","wrapper","up","right","down","left","xm","ym","update","cache","x","startsWith","_tapstart","_","_tapstop","_tapmove","cancelable","getBoundingClientRect","width","height","touch","touches","clientX","clientY","top","style","offsetWidth","offsetHeight","cx","cy","trigger","destroy","Selectable","className","onTap","forEach","classList","NanoPop","[object Object]","reference","popper","positionFlipOrder","defaultPositionFlipOrder","variantFlipOrder","defaultVariantFlipOrder","container","documentElement","forceApplyOnFailure","margin","position","this","_config","_force","refBox","popBox","positionStore","bottom","variantStore","vm","vs","ve","hs","he","hm","posKey","varKey","positions","variants","vertical","mainVal","positionKey","variantKey","positionBox","variantBox","positionMaximum","variantMaximum","positionMinimum","variantMinimum","variantVal","start","middle","end","Pickr","constructor","init","save","hide","show","clear","change","changestop","cancel","swatchselect","DEFAULT_OPTIONS","swatches","components","theme","sliders","lockOpacity","padding","includes","interaction","preview","opacity","hue","palette","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","button","app","_root","_nanopop","setAttribute","_t","requestAnimationFrame","cb","setColor","default","_rePositioningPicker","defaultRepresentation","_representation","setColorRepresentation","showAlways","_initializingActive","_emit","instance","useAsButton","inline","appClass","hidden","input","int","find","add","contains","buildPickr","appendChild","removeChild","parent","nextSibling","insertBefore","remove","parentNode","replaceChild","disabled","disable","comparison","transition","lastColor","inst","cs","repeat","so","sh","getColor","_color","_lastColor","picker","currentColor","_recalc","_updateOutput","cssRGBaString","background","_swatchColors","slider","backgroundColor","selectable","_components","eventBindings","_clearColor","setHSVA","applyColor","result","stopImmediatePropagation","ck","closeWithKey","isOpen","code","some","adjustableNumbers","ranges","step","range","getColorRepresentation","nv","toPrecision","autoReposition","timeout","closeOnScroll","setTimeout","rs","clearTimeout","_eventBindings","body","eb","innerHeight","innerWidth","outputPrecision","silent","_parseLocalColor","alphaMakesAChange","i18n","I18N_DEFAULTS","event","args","_eventListener","callBacks","indexOf","splice","removeSwatch","swatchColor","destroyAndRemove","recalc","string","utype","click","getSelectedColor","getRoot","enable","version"],"mappings":"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","file":"pickr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/* eslint-disable prefer-rest-params */\r\nfunction eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    for (const el of elements) {\r\n        for (const ev of events) {\r\n            el[method](ev, fn, {capture: false, ...options});\r\n        }\r\n    }\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\n/**\r\n * Creates an DOM-Element out of a string (Single element).\r\n * @param html HTML representing a single element\r\n * @returns {Element | null} The element.\r\n */\r\nexport function createElementFromString(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstElementChild;\r\n}\r\n\r\n/**\r\n * Creates a new html element, every element which has\r\n * a ':ref' attribute will be saved in a object (which will be returned)\r\n * where the value of ':ref' is the object-key and the value the HTMLElement.\r\n *\r\n * It's possible to create a hierarchy if you add a ':obj' attribute. Every\r\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\r\n *\r\n * If you want to create an Array out of multiple elements, you can use the ':arr' attribute,\r\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\r\n * would be added to it.\r\n *\r\n * @param str - The HTML String.\r\n */\r\n\r\nexport function createFromTemplate(str) {\r\n\r\n    // Removes an attribute from a HTMLElement and returns the value.\r\n    const removeAttribute = (el, name) => {\r\n        const value = el.getAttribute(name);\r\n        el.removeAttribute(name);\r\n        return value;\r\n    };\r\n\r\n    // Recursive function to resolve template\r\n    const resolve = (element, base = {}) => {\r\n\r\n        // Check key and container attribute\r\n        const con = removeAttribute(element, ':obj');\r\n        const key = removeAttribute(element, ':ref');\r\n        const subtree = con ? (base[con] = {}) : base;\r\n\r\n        // Check and save element\r\n        key && (base[key] = element);\r\n        for (const child of Array.from(element.children)) {\r\n            const arr = removeAttribute(child, ':arr');\r\n            const sub = resolve(child, arr ? {} : subtree);\r\n\r\n            if (arr) {\r\n\r\n                // Check if there is already an array and add element\r\n                (subtree[arr] || (subtree[arr] = []))\r\n                    .push(Object.keys(sub).length ? sub : child);\r\n            }\r\n        }\r\n\r\n        return base;\r\n    };\r\n\r\n    return resolve(createElementFromString(str));\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) {\r\n        return path;\r\n    }\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) {\r\n        path.push(el);\r\n    }\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Resolves a HTMLElement by query.\r\n * @param val\r\n * @returns {null|Document|Element}\r\n */\r\nexport function resolveElement(val) {\r\n    if (val instanceof Element) {\r\n        return val;\r\n    } else if (typeof val === 'string') {\r\n        return val.split(/>>/g).reduce((pv, cv, ci, a) => {\r\n            pv = pv.querySelector(cv);\r\n            return ci < a.length - 1 ? pv.shadowRoot : pv;\r\n        }, document);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates the ability to change numbers in an input field with the scroll-wheel.\r\n * @param el\r\n * @param mapper\r\n */\r\nexport function adjustableInputNumbers(el, mapper = v => v) {\r\n\r\n    function handleScroll(e) {\r\n        const inc = ([0.001, 0.01, 0.1])[Number(e.shiftKey || e.ctrlKey * 2)] * (e.deltaY < 0 ? 1 : -1);\r\n\r\n        let index = 0;\r\n        let off = el.selectionStart;\r\n        el.value = el.value.replace(/[\\d.]+/g, (v, i) => {\r\n\r\n            // Check if number is in cursor range and increase it\r\n            if (i <= off && i + v.length >= off) {\r\n                off = i;\r\n                return mapper(Number(v), inc, index);\r\n            }\r\n\r\n            index++;\r\n            return v;\r\n        });\r\n\r\n        el.focus();\r\n        el.setSelectionRange(off, off);\r\n\r\n        // Prevent default and trigger input event\r\n        e.preventDefault();\r\n        el.dispatchEvent(new Event('input'));\r\n    }\r\n\r\n    // Bind events\r\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\r\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\r\n}\r\n","// Shorthands\r\nconst {min, max, floor, round} = Math;\r\n\r\n/**\r\n * Tries to convert a color name to rgb/a hex representation\r\n * @param name\r\n * @returns {string | CanvasGradient | CanvasPattern}\r\n */\r\nfunction standardizeColor(name) {\r\n\r\n    // Since invalid color's will be parsed as black, filter them out\r\n    if (name.toLowerCase() === 'black') {\r\n        return '#000';\r\n    }\r\n\r\n    const ctx = document.createElement('canvas').getContext('2d');\r\n    ctx.fillStyle = name;\r\n    return ctx.fillStyle === '#000' ? null : ctx.fillStyle;\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to RGB.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} Array with rgb values.\r\n */\r\nexport function hsvToRgb(h, s, v) {\r\n    h = (h / 360) * 6;\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    const i = floor(h);\r\n\r\n    const f = h - i;\r\n    const p = v * (1 - s);\r\n    const q = v * (1 - f * s);\r\n    const t = v * (1 - (1 - f) * s);\r\n\r\n    const mod = i % 6;\r\n    const r = [v, q, p, p, t, v][mod];\r\n    const g = [t, v, v, q, p, p][mod];\r\n    const b = [p, p, t, v, v, q][mod];\r\n\r\n    return [\r\n        r * 255,\r\n        g * 255,\r\n        b * 255\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to Hex.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {string[]} Hex values\r\n */\r\nexport function hsvToHex(h, s, v) {\r\n    return hsvToRgb(h, s, v).map(v =>\r\n        round(v).toString(16).padStart(2, '0')\r\n    );\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to CMYK.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} CMYK values\r\n */\r\nexport function hsvToCmyk(h, s, v) {\r\n    const rgb = hsvToRgb(h, s, v);\r\n    const r = rgb[0] / 255;\r\n    const g = rgb[1] / 255;\r\n    const b = rgb[2] / 255;\r\n\r\n    const k = min(1 - r, 1 - g, 1 - b);\r\n    const c = k === 1 ? 0 : (1 - r - k) / (1 - k);\r\n    const m = k === 1 ? 0 : (1 - g - k) / (1 - k);\r\n    const y = k === 1 ? 0 : (1 - b - k) / (1 - k);\r\n\r\n    return [\r\n        c * 100,\r\n        m * 100,\r\n        y * 100,\r\n        k * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to HSL.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} HSL values\r\n */\r\nexport function hsvToHsl(h, s, v) {\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    const l = (2 - s) * v / 2;\r\n\r\n    if (l !== 0) {\r\n        if (l === 1) {\r\n            s = 0;\r\n        } else if (l < 0.5) {\r\n            s = s * v / (l * 2);\r\n        } else {\r\n            s = s * v / (2 - l * 2);\r\n        }\r\n    }\r\n\r\n    return [\r\n        h,\r\n        s * 100,\r\n        l * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert RGB to HSV.\r\n * @param r Red\r\n * @param g Green\r\n * @param b Blue\r\n * @return {number[]} HSV values.\r\n */\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    const minVal = min(r, g, b);\r\n    const maxVal = max(r, g, b);\r\n    const delta = maxVal - minVal;\r\n\r\n    let h, s;\r\n    const v = maxVal;\r\n    if (delta === 0) {\r\n        h = s = 0;\r\n    } else {\r\n        s = delta / maxVal;\r\n        const dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\r\n        const dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\r\n        const db = (((maxVal - b) / 6) + (delta / 2)) / delta;\r\n\r\n        if (r === maxVal) {\r\n            h = db - dg;\r\n        } else if (g === maxVal) {\r\n            h = (1 / 3) + dr - db;\r\n        } else if (b === maxVal) {\r\n            h = (2 / 3) + dg - dr;\r\n        }\r\n\r\n        if (h < 0) {\r\n            h += 1;\r\n        } else if (h > 1) {\r\n            h -= 1;\r\n        }\r\n    }\r\n\r\n    return [\r\n        h * 360,\r\n        s * 100,\r\n        v * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert CMYK to HSV.\r\n * @param c Cyan\r\n * @param m Magenta\r\n * @param y Yellow\r\n * @param k Key (Black)\r\n * @return {number[]} HSV values.\r\n */\r\nfunction cmykToHsv(c, m, y, k) {\r\n    c /= 100;\r\n    m /= 100;\r\n    y /= 100;\r\n    k /= 100;\r\n\r\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\r\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\r\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\r\n\r\n    return [...rgbToHsv(r, g, b)];\r\n}\r\n\r\n/**\r\n * Convert HSL to HSV.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param l Lightness\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hslToHsv(h, s, l) {\r\n    s /= 100;\r\n    l /= 100;\r\n    s *= l < 0.5 ? l : 1 - l;\r\n\r\n    const ns = (2 * s / (l + s)) * 100;\r\n    const v = (l + s) * 100;\r\n    return [h, isNaN(ns) ? 0 : ns, v];\r\n}\r\n\r\n/**\r\n * Convert HEX to HSV.\r\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hexToHsv(hex) {\r\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\r\n}\r\n\r\n/**\r\n * Try's to parse a string which represents a color to a HSV array.\r\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\r\n * @param str\r\n * @return {*}\r\n */\r\nexport function parseToHSVA(str) {\r\n\r\n    // Check if string is a color-name\r\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\r\n\r\n    // Regular expressions to match different types of color represention\r\n    const regex = {\r\n        cmyk: /^cmyk[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)/i,\r\n        rgba: /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hsla: /^((hsla)|hsl)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hsva: /^((hsva)|hsv)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hexa: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\r\n    };\r\n\r\n    /**\r\n     * Takes an Array of any type, convert strings which represents\r\n     * a number to a number an anything else to undefined.\r\n     * @param array\r\n     * @return {*}\r\n     */\r\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\r\n\r\n    let match;\r\n    invalid: for (const type in regex) {\r\n\r\n        // Check if current scheme passed\r\n        if (!(match = regex[type].exec(str))) {\r\n            continue;\r\n        }\r\n\r\n        // Match[2] does only contain a truly value if rgba, hsla, or hsla got matched\r\n        const alphaValid = a => (!!match[2] === (typeof a === 'number'));\r\n\r\n        // Try to convert\r\n        switch (type) {\r\n            case 'cmyk': {\r\n                const [, c, m, y, k] = numarize(match);\r\n\r\n                if (c > 100 || m > 100 || y > 100 || k > 100) {\r\n                    break invalid;\r\n                }\r\n\r\n                return {values: cmykToHsv(c, m, y, k), type};\r\n            }\r\n            case 'rgba': {\r\n                const [, , , r, g, b, a] = numarize(match);\r\n\r\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1 || !alphaValid(a)) {\r\n                    break invalid;\r\n                }\r\n\r\n                return {values: [...rgbToHsv(r, g, b), a], a, type};\r\n            }\r\n            case 'hexa': {\r\n                let [, hex] = match;\r\n\r\n                if (hex.length === 4 || hex.length === 3) {\r\n                    hex = hex.split('').map(v => v + v).join('');\r\n                }\r\n\r\n                const raw = hex.substring(0, 6);\r\n                let a = hex.substring(6);\r\n\r\n                // Convert 0 - 255 to 0 - 1 for opacity\r\n                a = a ? (parseInt(a, 16) / 255) : undefined;\r\n\r\n                return {values: [...hexToHsv(raw), a], a, type};\r\n            }\r\n            case 'hsla': {\r\n                const [, , , h, s, l, a] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1 || !alphaValid(a)) {\r\n                    break invalid;\r\n                }\r\n\r\n                return {values: [...hslToHsv(h, s, l), a], a, type};\r\n            }\r\n            case 'hsva': {\r\n                const [, , , h, s, v, a] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1 || !alphaValid(a)) {\r\n                    break invalid;\r\n                }\r\n\r\n                return {values: [h, s, v, a], a, type};\r\n            }\r\n        }\r\n    }\r\n\r\n    return {values: null, type: null};\r\n}\r\n","import {hsvToCmyk, hsvToHex, hsvToHsl, hsvToRgb} from './color';\r\n\r\n/**\r\n * Simple class which holds the properties\r\n * of the color represention model hsla (hue saturation lightness alpha)\r\n */\r\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\r\n    const mapper = (original, next) => (precision = -1) => {\r\n        return next(~precision ? original.map(v => Number(v.toFixed(precision))) : original);\r\n    };\r\n\r\n    const that = {\r\n        h, s, v, a,\r\n\r\n        toHSVA() {\r\n            const hsva = [that.h, that.s, that.v, that.a];\r\n            hsva.toString = mapper(hsva, arr => `hsva(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\r\n            return hsva;\r\n        },\r\n\r\n        toHSLA() {\r\n            const hsla = [...hsvToHsl(that.h, that.s, that.v), that.a];\r\n            hsla.toString = mapper(hsla, arr => `hsla(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\r\n            return hsla;\r\n        },\r\n\r\n        toRGBA() {\r\n            const rgba = [...hsvToRgb(that.h, that.s, that.v), that.a];\r\n            rgba.toString = mapper(rgba, arr => `rgba(${arr[0]}, ${arr[1]}, ${arr[2]}, ${that.a})`);\r\n            return rgba;\r\n        },\r\n\r\n        toCMYK() {\r\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\r\n            cmyk.toString = mapper(cmyk, arr => `cmyk(${arr[0]}%, ${arr[1]}%, ${arr[2]}%, ${arr[3]}%)`);\r\n            return cmyk;\r\n        },\r\n\r\n        toHEXA() {\r\n            const hex = hsvToHex(that.h, that.s, that.v);\r\n\r\n            // Check if alpha channel make sense, convert it to 255 number space, convert\r\n            // To hex and pad it with zeros if needet.\r\n            const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\r\n                .toString(16)\r\n                .toUpperCase().padStart(2, '0');\r\n\r\n            alpha && hex.push(alpha);\r\n            hex.toString = () => `#${hex.join('').toUpperCase()}`;\r\n            return hex;\r\n        },\r\n\r\n        clone: () => HSVaColor(that.h, that.s, that.v, that.a)\r\n    };\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\r\n\r\nconst clamp = v => Math.max(Math.min(v, 1), 0);\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lock: null,\r\n            onchange: () => 0,\r\n            onstop: () => 0\r\n        }, opt),\r\n\r\n        _keyboard(e) {\r\n            const { options } = that;\r\n            const { type, key } = e;\r\n\r\n            // Check to see if the Movable is focused and then move it based on arrow key inputs\r\n            // For improved accessibility\r\n            if (document.activeElement === options.wrapper) {\r\n                const { lock } = that.options;\r\n                const up = key === 'ArrowUp';\r\n                const right = key === 'ArrowRight';\r\n                const down = key === 'ArrowDown';\r\n                const left = key === 'ArrowLeft';\r\n\r\n                if (type === 'keydown' && (up || right || down || left)) {\r\n                    let xm = 0;\r\n                    let ym = 0;\r\n\r\n                    if (lock === 'v') {\r\n                        xm = (up || right) ? 1 : -1;\r\n                    } else if (lock === 'h') {\r\n                        xm = (up || right) ? -1 : 1;\r\n                    } else {\r\n                        ym = up ? -1 : (down ? 1 : 0);\r\n                        xm = left ? -1 : (right ? 1 : 0);\r\n                    }\r\n\r\n                    that.update(\r\n                        clamp(that.cache.x + (0.01 * xm)),\r\n                        clamp(that.cache.y + (0.01 * ym))\r\n                    );\r\n                    e.preventDefault();\r\n                } else if (key.startsWith('Arrow')) {\r\n                    that.options.onstop();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        },\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            if (evt.cancelable) {\r\n                evt.preventDefault();\r\n            }\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const { options, cache } = that;\r\n            const { lock, element, wrapper } = options;\r\n            const b = wrapper.getBoundingClientRect();\r\n            if (b.width == 0 || b.height == 0)\r\n                return;\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) {\r\n                    x = b.left;\r\n                } else if (x > b.left + b.width) {\r\n                    x = b.left + b.width;\r\n                }\r\n                if (y < b.top) {\r\n                    y = b.top;\r\n                } else if (y > b.top + b.height) {\r\n                    y = b.top + b.height;\r\n                }\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x * b.width;\r\n                y = cache.y * b.height;\r\n            }\r\n\r\n            if (lock !== 'h') {\r\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            if (lock !== 'v') {\r\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetHeight / 2}px)`;\r\n            }\r\n\r\n            that.cache = { x: x / b.width, y: y / b.height };\r\n            const cx = clamp(x / b.width);\r\n            const cy = clamp(y / b.height);\r\n\r\n            switch (lock) {\r\n                case 'v':\r\n                    return options.onchange(cx);\r\n                case 'h':\r\n                    return options.onchange(cy);\r\n                default:\r\n                    return options.onchange(cx, cy);\r\n            }\r\n        },\r\n\r\n        _tapstop() {\r\n            that.options.onstop();\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            const { left, top, width, height } = that.options.wrapper.getBoundingClientRect();\r\n\r\n            if (that.options.lock === 'h') {\r\n                y = x;\r\n            }\r\n\r\n            that._tapmove({\r\n                clientX: left + width * x,\r\n                clientY: top + height * y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const { options, _tapstart, _keyboard } = that;\r\n            _.off(document, ['keydown', 'keyup'], _keyboard);\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Initilize\r\n    const { options, _tapstart, _keyboard } = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    _.on(document, ['keydown', 'keyup'], _keyboard);\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","export type NanoPopOptions = {\n    forceApplyOnFailure?: boolean;\n    container?: DOMRect;\n    position?: NanoPopPositionCombination;\n    margin?: number;\n    variantFlipOrder?: VariantFlipOrder;\n    positionFlipOrder?: PositionFlipOrder;\n};\n\nexport type VariantFlipOrder = {\n    start: string;\n    middle: string;\n    end: string;\n};\n\nexport type PositionFlipOrder = {\n    top: string;\n    right: string;\n    bottom: string;\n    left: string;\n};\n\nexport type NanoPopPosition = 'top' | 'left' | 'bottom' | 'right';\n\nexport type NanoPopPositionCombination =\n    'top-start' | 'top-middle' | 'top-end' |\n    'left-start' | 'left-middle' | 'left-end' |\n    'right-start' | 'right-middle' | 'right-end' |\n    'bottom-start' | 'bottom-middle' | 'bottom-end' | NanoPopPosition;\n\ntype PositionPairs = [NanoPopPosition, NanoPopPosition];\n\ntype InternalSettings = {\n    forceApplyOnFailure: boolean;\n    container: DOMRect;\n    position: NanoPopPositionCombination;\n    margin: number;\n    variantFlipOrder: VariantFlipOrder;\n    positionFlipOrder: PositionFlipOrder;\n    reference: HTMLElement;\n    popper: HTMLElement;\n};\n\ntype AvailablePositions = {\n    t: number;\n    b: number;\n    l: number;\n    r: number;\n};\n\ntype AvailableVariants = {\n    vs: number;\n    vm: number;\n    ve: number;\n    hs: number;\n    hm: number;\n    he: number;\n};\n\nexport class NanoPop {\n\n    // Public version\n    public static readonly version = VERSION;\n\n    // Defaults\n    public static defaultVariantFlipOrder = {start: 'sme', middle: 'mse', end: 'ems'};\n    public static defaultPositionFlipOrder = {top: 'tbrl', right: 'rltb', bottom: 'btrl', left: 'lrbt'};\n\n    private _config: InternalSettings;\n\n    constructor(\n        reference: HTMLElement,\n        popper: HTMLElement, {\n            positionFlipOrder = NanoPop.defaultPositionFlipOrder,\n            variantFlipOrder = NanoPop.defaultVariantFlipOrder,\n            container = document.documentElement.getBoundingClientRect(),\n            forceApplyOnFailure = false,\n            margin = 8,\n            position = 'bottom-start'\n        }: NanoPopOptions = {}\n    ) {\n        this._config = {\n            positionFlipOrder,\n            variantFlipOrder,\n            reference,\n            popper,\n            position,\n            container,\n            forceApplyOnFailure,\n            margin\n        };\n    }\n\n    /**\n     * Re-aligns the element\n     * @param opt Optional, updated settings\n     */\n    update(opt: Partial<InternalSettings> = this._config, _force = false): string | null {\n        const {\n            container,\n            reference,\n            popper,\n            margin,\n            position,\n            forceApplyOnFailure,\n            variantFlipOrder,\n            positionFlipOrder\n        } = this._config = {...this._config, ...opt};\n\n        /**\n         * Reset position to resolve viewport\n         * See https://developer.mozilla.org/en-US/docs/Web/CSS/position#fixed\n         */\n        popper.style.left = '0';\n        popper.style.top = '0';\n\n        const refBox = reference.getBoundingClientRect();\n        const popBox = popper.getBoundingClientRect();\n\n        /**\n         * Holds coordinates of top, left, bottom and right alignment\n         */\n        const positionStore: AvailablePositions = {\n            t: refBox.top - popBox.height - margin,\n            b: refBox.bottom + margin,\n            r: refBox.right + margin,\n            l: refBox.left - popBox.width - margin\n        };\n\n        /**\n         * Holds corresponding variants (start, middle, end).\n         * The values depend on horizontal / vertical orientation\n         */\n        const variantStore: AvailableVariants = {\n            vm: (-popBox.width / 2) + (refBox.left + refBox.width / 2),\n            vs: refBox.left,\n            ve: refBox.left + refBox.width - popBox.width,\n            hs: refBox.bottom - refBox.height,\n            he: refBox.bottom - popBox.height,\n            hm: refBox.bottom - refBox.height / 2 - popBox.height / 2\n        };\n\n        // Extract position and variant\n        // Top-start -> top is \"position\" and \"start\" is the variant\n        const [posKey, varKey = 'middle'] = position.split('-');\n        const positions = positionFlipOrder[posKey as keyof PositionFlipOrder];\n        const variants = variantFlipOrder[varKey as keyof VariantFlipOrder];\n\n        // Try out all possible combinations, starting with the preferred one.\n        const {top, left, bottom, right} = container;\n\n        for (const p of positions) {\n            const vertical = (p === 't' || p === 'b');\n\n            // The position/variant-value, the related size value of the popper and the limit\n            const mainVal = positionStore[p as keyof AvailablePositions];\n\n            // Which property has to be changes.\n            const [positionKey, variantKey] = (vertical ? ['top', 'left'] : ['left', 'top']) as PositionPairs;\n\n            /**\n             * box refers to the size of the popper element. Depending on the orientation this is width or height.\n             * The limit is the corresponding, maximum value for this position.\n             */\n            const [positionBox, variantBox] = vertical ? [popBox.height, popBox.width] : [popBox.width, popBox.height];\n            const [positionMaximum, variantMaximum] = vertical ? [bottom, right] : [right, bottom];\n            const [positionMinimum, variantMinimum] = vertical ? [top, left] : [left, top];\n\n            // Skip pre-clipped values\n            if (!_force && (mainVal < (positionMinimum) || (mainVal + positionBox) > (positionMaximum))) {\n                continue;\n            }\n\n            for (const v of variants) {\n\n                // The position-value, the related size value of the popper and the limit\n                const variantVal = variantStore[((vertical ? 'v' : 'h') + v) as keyof AvailableVariants];\n\n                if (!_force && (variantVal < (variantMinimum) || (variantVal + variantBox) > (variantMaximum))) {\n                    continue;\n                }\n\n                // Apply styles and normalize viewport\n                popper.style[variantKey] = `${variantVal - popBox[variantKey]}px`;\n                popper.style[positionKey] = `${mainVal - popBox[positionKey]}px`;\n                return p + v;\n            }\n        }\n\n        if (forceApplyOnFailure) {\n            return this.update(undefined, true);\n        }\n\n        return null;\n    }\n}\n","import * as _ from './utils/utils';\r\nimport {version} from '../../package';\r\nimport {parseToHSVA} from './utils/color';\r\nimport {HSVaColor} from './utils/hsvacolor';\r\nimport Moveable from './libs/moveable';\r\nimport Selectable from './libs/selectable';\r\nimport buildPickr from './template';\r\nimport {NanoPop} from 'nanopop';\r\n\r\nclass Pickr {\r\n\r\n    // Expose pickr utils\r\n    static utils = _;\r\n\r\n    // Assign version and export\r\n    static version = version;\r\n\r\n    // Default strings\r\n    static I18N_DEFAULTS = {\r\n\r\n        // Strings visible in the UI\r\n        'ui:dialog': 'color picker dialog',\r\n        'btn:toggle': 'toggle color picker dialog',\r\n        'btn:swatch': 'color swatch',\r\n        'btn:last-color': 'use previous color',\r\n        'btn:save': 'Save',\r\n        'btn:cancel': 'Cancel',\r\n        'btn:clear': 'Clear',\r\n\r\n        // Strings used for aria-labels\r\n        'aria:btn:save': 'save and close',\r\n        'aria:btn:cancel': 'cancel and close',\r\n        'aria:btn:clear': 'clear and close',\r\n        'aria:input': 'color input field',\r\n        'aria:palette': 'color selection area',\r\n        'aria:hue': 'hue selection slider',\r\n        'aria:opacity': 'selection slider'\r\n    };\r\n\r\n    // Default options\r\n    static DEFAULT_OPTIONS = {\r\n        appClass: null,\r\n        theme: 'classic',\r\n        useAsButton: false,\r\n        padding: 8,\r\n        disabled: false,\r\n        comparison: true,\r\n        closeOnScroll: false,\r\n        outputPrecision: 0,\r\n        lockOpacity: false,\r\n        autoReposition: true,\r\n        container: 'body',\r\n\r\n        components: {\r\n            interaction: {}\r\n        },\r\n\r\n        i18n: {},\r\n        swatches: null,\r\n        inline: false,\r\n        sliders: null,\r\n\r\n        default: '#42445a',\r\n        defaultRepresentation: null,\r\n        position: 'bottom-middle',\r\n        adjustableNumbers: true,\r\n        showAlways: false,\r\n\r\n        closeWithKey: 'Escape'\r\n    };\r\n\r\n    // Will be used to prevent specific actions during initilization\r\n    _initializingActive = true;\r\n\r\n    // If the current color value should be recalculated\r\n    _recalc = true;\r\n\r\n    // Positioning engine and DOM-Tree\r\n    _nanopop = null;\r\n    _root = null;\r\n\r\n    // Current and last color for comparison\r\n    _color = HSVaColor();\r\n    _lastColor = HSVaColor();\r\n    _swatchColors = [];\r\n\r\n    // Evenlistener name: [callbacks]\r\n    _eventListener = {\r\n        init: [],\r\n        save: [],\r\n        hide: [],\r\n        show: [],\r\n        clear: [],\r\n        change: [],\r\n        changestop: [],\r\n        cancel: [],\r\n        swatchselect: []\r\n    };\r\n\r\n    constructor(opt) {\r\n\r\n        // Assign default values\r\n        this.options = opt = Object.assign({...Pickr.DEFAULT_OPTIONS}, opt);\r\n\r\n        const {swatches, components, theme, sliders, lockOpacity, padding} = opt;\r\n\r\n        if (['nano', 'monolith'].includes(theme) && !sliders) {\r\n            opt.sliders = 'h';\r\n        }\r\n\r\n        // Check interaction section\r\n        if (!components.interaction) {\r\n            components.interaction = {};\r\n        }\r\n\r\n        // Overwrite palette if preview, opacity or hue are true\r\n        const {preview, opacity, hue, palette} = components;\r\n        components.opacity = (!lockOpacity && opacity);\r\n        components.palette = palette || preview || opacity || hue;\r\n\r\n        // Initialize picker\r\n        this._preBuild();\r\n        this._buildComponents();\r\n        this._bindEvents();\r\n        this._finalBuild();\r\n\r\n        // Append pre-defined swatch colors\r\n        if (swatches && swatches.length) {\r\n            swatches.forEach(color => this.addSwatch(color));\r\n        }\r\n\r\n        // Initialize positioning engine\r\n        const {button, app} = this._root;\r\n        this._nanopop = new NanoPop(button, app, {\r\n            margin: padding\r\n        });\r\n\r\n        // Initialize accessibility\r\n        button.setAttribute('role', 'button');\r\n        button.setAttribute('aria-label', this._t('btn:toggle'));\r\n\r\n        // Initilization is finish, pickr is visible and ready for usage\r\n        const that = this;\r\n        requestAnimationFrame((function cb() {\r\n\r\n            // TODO: Performance issue due to high call-rate?\r\n            if (!app.offsetWidth) {\r\n                return requestAnimationFrame(cb);\r\n            }\r\n\r\n            // Apply default color\r\n            that.setColor(opt.default);\r\n            that._rePositioningPicker();\r\n\r\n            // Initialize color representation\r\n            if (opt.defaultRepresentation) {\r\n                that._representation = opt.defaultRepresentation;\r\n                that.setColorRepresentation(that._representation);\r\n            }\r\n\r\n            // Show pickr if locked\r\n            if (opt.showAlways) {\r\n                that.show();\r\n            }\r\n\r\n            // Initialization is done - pickr is usable, fire init event\r\n            that._initializingActive = false;\r\n            that._emit('init');\r\n        }));\r\n    }\r\n\r\n    // Create instance via method\r\n    static create = options => new Pickr(options);\r\n\r\n    // Does only the absolutly basic thing to initialize the components\r\n    _preBuild() {\r\n        const {options} = this;\r\n\r\n        // Resolve elements\r\n        for (const type of ['el', 'container']) {\r\n            options[type] = _.resolveElement(options[type]);\r\n        }\r\n\r\n        // Create element and append it to body to\r\n        // Prevent initialization errors\r\n        this._root = buildPickr(this);\r\n\r\n        // Check if a custom button is used\r\n        if (options.useAsButton) {\r\n            this._root.button = options.el; // Replace button with customized button\r\n        }\r\n\r\n        options.container.appendChild(this._root.root);\r\n    }\r\n\r\n    _finalBuild() {\r\n        const opt = this.options;\r\n        const root = this._root;\r\n\r\n        // Remove from body\r\n        opt.container.removeChild(root.root);\r\n\r\n        if (opt.inline) {\r\n            const parent = opt.el.parentElement;\r\n\r\n            if (opt.el.nextSibling) {\r\n                parent.insertBefore(root.app, opt.el.nextSibling);\r\n            } else {\r\n                parent.appendChild(root.app);\r\n            }\r\n        } else {\r\n            opt.container.appendChild(root.app);\r\n        }\r\n\r\n        // Don't replace the the element if a custom button is used\r\n        if (!opt.useAsButton) {\r\n\r\n            // Replace element with actual color-picker\r\n            opt.el.parentNode.replaceChild(root.root, opt.el);\r\n        } else if (opt.inline) {\r\n            opt.el.remove();\r\n        }\r\n\r\n        // Check if it should be immediatly disabled\r\n        if (opt.disabled) {\r\n            this.disable();\r\n        }\r\n\r\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\r\n        if (!opt.comparison) {\r\n            root.button.style.transition = 'none';\r\n\r\n            if (!opt.useAsButton) {\r\n                root.preview.lastColor.style.transition = 'none';\r\n            }\r\n        }\r\n\r\n        this.hide();\r\n    }\r\n\r\n    _buildComponents() {\r\n\r\n        // Instance reference\r\n        const inst = this;\r\n        const cs = this.options.components;\r\n        const sliders = (inst.options.sliders || 'v').repeat(2);\r\n        const [so, sh] = sliders.match(/^[vh]+$/g) ? sliders : [];\r\n\r\n        // Re-assign if null\r\n        const getColor = () =>\r\n            this._color || (this._color = this._lastColor.clone());\r\n\r\n        const components = {\r\n\r\n            palette: Moveable({\r\n                element: inst._root.palette.picker,\r\n                wrapper: inst._root.palette.palette,\r\n\r\n                onstop: () => inst._emit('changestop', inst),\r\n                onchange(x, y) {\r\n                    if (!cs.palette) {\r\n                        return;\r\n                    }\r\n\r\n                    const color = getColor();\r\n                    const {_root, options} = inst;\r\n                    const {lastColor, currentColor} = _root.preview;\r\n\r\n                    // Update the input field only if the user is currently not typing\r\n                    if (inst._recalc) {\r\n\r\n                        // Calculate saturation based on the position\r\n                        color.s = x * 100;\r\n\r\n                        // Calculate the value\r\n                        color.v = 100 - y * 100;\r\n\r\n                        // Prevent falling under zero\r\n                        color.v < 0 ? color.v = 0 : 0;\r\n                        inst._updateOutput();\r\n                    }\r\n\r\n                    // Set picker and gradient color\r\n                    const cssRGBaString = color.toRGBA().toString(0);\r\n                    this.element.style.background = cssRGBaString;\r\n                    this.wrapper.style.background = `\r\n                        linear-gradient(to top, rgba(0, 0, 0, ${color.a}), transparent),\r\n                        linear-gradient(to left, hsla(${color.h}, 100%, 50%, ${color.a}), rgba(255, 255, 255, ${color.a}))\r\n                    `;\r\n\r\n                    // Check if color is locked\r\n                    if (!options.comparison) {\r\n                        _root.button.style.color = cssRGBaString;\r\n\r\n                        // If the user changes the color, remove the cleared icon\r\n                        _root.button.classList.remove('clear');\r\n                    } else if (!options.useAsButton && !inst._lastColor) {\r\n\r\n                        // Apply color to both the last and current color since the current state is cleared\r\n                        lastColor.style.color = cssRGBaString;\r\n                    }\r\n\r\n                    // Check if there's a swatch which color matches the current one\r\n                    const hexa = color.toHEXA().toString();\r\n                    for (const {el, color} of inst._swatchColors) {\r\n                        el.classList[hexa === color.toHEXA().toString() ? 'add' : 'remove']('pcr-active');\r\n                    }\r\n\r\n                    // Change current color\r\n                    currentColor.style.color = cssRGBaString;\r\n                }\r\n            }),\r\n\r\n            hue: Moveable({\r\n                lock: sh === 'v' ? 'h' : 'v',\r\n                element: inst._root.hue.picker,\r\n                wrapper: inst._root.hue.slider,\r\n\r\n                onstop: () => inst._emit('changestop', inst),\r\n                onchange(v) {\r\n                    if (!cs.hue || !cs.palette) {\r\n                        return;\r\n                    }\r\n\r\n                    const color = getColor();\r\n\r\n                    // Calculate hue\r\n                    if (inst._recalc) {\r\n                        color.h = v * 360;\r\n                    }\r\n\r\n                    // Update color\r\n                    this.element.style.backgroundColor = `hsl(${color.h}, 100%, 50%)`;\r\n                    components.palette.trigger();\r\n                }\r\n            }),\r\n\r\n            opacity: Moveable({\r\n                lock: so === 'v' ? 'h' : 'v',\r\n                element: inst._root.opacity.picker,\r\n                wrapper: inst._root.opacity.slider,\r\n\r\n                onstop: () => inst._emit('changestop', inst),\r\n                onchange(v) {\r\n                    if (!cs.opacity || !cs.palette) {\r\n                        return;\r\n                    }\r\n\r\n                    const color = getColor();\r\n\r\n                    // Calculate opacity\r\n                    if (inst._recalc) {\r\n                        color.a = Math.round(v * 1e2) / 100;\r\n                    }\r\n\r\n                    // Update color\r\n                    this.element.style.background = `rgba(0, 0, 0, ${color.a})`;\r\n                    components.palette.trigger();\r\n                }\r\n            }),\r\n\r\n            selectable: Selectable({\r\n                elements: inst._root.interaction.options,\r\n                className: 'active',\r\n\r\n                onchange(e) {\r\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\r\n                    inst._recalc && inst._updateOutput();\r\n                }\r\n            })\r\n        };\r\n\r\n        this._components = components;\r\n    }\r\n\r\n    _bindEvents() {\r\n        const {_root, options} = this;\r\n\r\n        const eventBindings = [\r\n\r\n            // Clear color\r\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\r\n\r\n            // Select last color on click\r\n            _.on([\r\n                _root.interaction.cancel,\r\n                _root.preview.lastColor\r\n            ], 'click', () => {\r\n                this._emit('cancel', this);\r\n                this.setHSVA(...(this._lastColor || this._color).toHSVA(), true);\r\n            }),\r\n\r\n            // Save color\r\n            _.on(_root.interaction.save, 'click', () => {\r\n                !this.applyColor() && !options.showAlways && this.hide();\r\n            }),\r\n\r\n            // User input\r\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\r\n\r\n                // Fire listener if initialization is finish and changed color was valid\r\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\r\n                    this._emit('change', this._color);\r\n                }\r\n\r\n                e.stopImmediatePropagation();\r\n            }),\r\n\r\n            // Detect user input and disable auto-recalculation\r\n            _.on(_root.interaction.result, ['focus', 'blur'], e => {\r\n                this._recalc = e.type === 'blur';\r\n                this._recalc && this._updateOutput();\r\n            }),\r\n\r\n            // Cancel input detection on color change\r\n            _.on([\r\n                _root.palette.palette,\r\n                _root.palette.picker,\r\n                _root.hue.slider,\r\n                _root.hue.picker,\r\n                _root.opacity.slider,\r\n                _root.opacity.picker\r\n            ], ['mousedown', 'touchstart'], () => this._recalc = true, {passive: true})\r\n        ];\r\n\r\n        // Provide hiding / showing abilities only if showAlways is false\r\n        if (!options.showAlways) {\r\n            const ck = options.closeWithKey;\r\n\r\n            eventBindings.push(\r\n\r\n                // Save and hide / show picker\r\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\r\n\r\n                // Close with escape key\r\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\r\n\r\n                // Cancel selecting if the user taps behind the color picker\r\n                _.on(document, ['touchstart', 'mousedown'], e => {\r\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\r\n                        this.hide();\r\n                    }\r\n                }, {capture: true})\r\n            );\r\n        }\r\n\r\n        // Make input adjustable if enabled\r\n        if (options.adjustableNumbers) {\r\n            const ranges = {\r\n                rgba: [255, 255, 255, 1],\r\n                hsva: [360, 100, 100, 1],\r\n                hsla: [360, 100, 100, 1],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            _.adjustableInputNumbers(_root.interaction.result, (o, step, index) => {\r\n                const range = ranges[this.getColorRepresentation().toLowerCase()];\r\n\r\n                if (range) {\r\n                    const max = range[index];\r\n\r\n                    // Calculate next reasonable number\r\n                    const nv = o + (max >= 100 ? step * 1000 : step);\r\n\r\n                    // Apply range of zero up to max, fix floating-point issues\r\n                    return nv <= 0 ? 0 : Number((nv < max ? nv : max).toPrecision(3));\r\n                }\r\n\r\n                return o;\r\n            });\r\n        }\r\n\r\n        if (options.autoReposition && !options.inline) {\r\n            let timeout = null;\r\n            const that = this;\r\n\r\n            // Re-calc position on window resize, scroll and wheel\r\n            eventBindings.push(\r\n                _.on(window, ['scroll', 'resize'], () => {\r\n                    if (that.isOpen()) {\r\n\r\n                        if (options.closeOnScroll) {\r\n                            that.hide();\r\n                        }\r\n\r\n                        if (timeout === null) {\r\n                            timeout = setTimeout(() => timeout = null, 100);\r\n\r\n                            // Update position on every frame\r\n                            requestAnimationFrame(function rs() {\r\n                                that._rePositioningPicker();\r\n                                (timeout !== null) && requestAnimationFrame(rs);\r\n                            });\r\n                        } else {\r\n                            clearTimeout(timeout);\r\n                            timeout = setTimeout(() => timeout = null, 100);\r\n                        }\r\n                    }\r\n                }, {capture: true})\r\n            );\r\n        }\r\n\r\n        // Save bindings\r\n        this._eventBindings = eventBindings;\r\n    }\r\n\r\n    _rePositioningPicker() {\r\n        const {options} = this;\r\n\r\n        // No repositioning needed if inline\r\n        if (!options.inline) {\r\n            const success = this._nanopop.update({\r\n                container: document.body.getBoundingClientRect(),\r\n                position: options.position,\r\n                forceApplyOnFailure: !this._recalc\r\n            });\r\n\r\n            if (!success) {\r\n                const el = this._root.app;\r\n                const eb = el.getBoundingClientRect();\r\n                el.style.top = `${(window.innerHeight - eb.height) / 2}px`;\r\n                el.style.left = `${(window.innerWidth - eb.width) / 2}px`;\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateOutput() {\r\n        const {_root, _color, options} = this;\r\n\r\n        // Check if component is present\r\n        if (_root.interaction.type()) {\r\n\r\n            // Construct function name and call if present\r\n            const method = `to${_root.interaction.type().getAttribute('data-type')}`;\r\n            _root.interaction.result.value = typeof _color[method] === 'function' ?\r\n                _color[method]().toString(options.outputPrecision) : '';\r\n        }\r\n\r\n        // Fire listener if initialization is finish\r\n        if (!this._initializingActive && this._recalc) {\r\n            this._emit('change', _color);\r\n        }\r\n    }\r\n\r\n    _clearColor(silent = false) {\r\n        const {_root, options} = this;\r\n\r\n        // Change only the button color if it isn't customized\r\n        if (!options.useAsButton) {\r\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\r\n        }\r\n\r\n        _root.button.classList.add('clear');\r\n\r\n        if (!options.showAlways) {\r\n            this.hide();\r\n        }\r\n\r\n        this._lastColor = null;\r\n        if (!this._initializingActive && !silent) {\r\n\r\n            // Fire listener\r\n            this._emit('save', null);\r\n            this._emit('clear', this);\r\n        }\r\n    }\r\n\r\n    _parseLocalColor(str) {\r\n        const {values, type, a} = parseToHSVA(str);\r\n        const {lockOpacity} = this.options;\r\n        const alphaMakesAChange = a !== undefined && a !== 1;\r\n\r\n        // If no opacity is applied, add undefined at the very end which gets\r\n        // Set to 1 in setHSVA\r\n        if (values && values.length === 3) {\r\n            values[3] = undefined;\r\n        }\r\n\r\n        return {\r\n            values: (!values || (lockOpacity && alphaMakesAChange)) ? null : values,\r\n            type\r\n        };\r\n    }\r\n\r\n    _t(key) {\r\n        return this.options.i18n[key] || Pickr.I18N_DEFAULTS[key];\r\n    }\r\n\r\n    _emit(event, ...args) {\r\n        this._eventListener[event].forEach(cb => cb(...args, this));\r\n    }\r\n\r\n    on(event, cb) {\r\n        this._eventListener[event].push(cb);\r\n        return this;\r\n    }\r\n\r\n    off(event, cb) {\r\n        const callBacks = (this._eventListener[event] || []);\r\n        const index = callBacks.indexOf(cb);\r\n\r\n        if (~index) {\r\n            callBacks.splice(index, 1);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Appends a color to the swatch palette\r\n     * @param color\r\n     * @returns {boolean}\r\n     */\r\n    addSwatch(color) {\r\n        const {values} = this._parseLocalColor(color);\r\n\r\n        if (values) {\r\n            const {_swatchColors, _root} = this;\r\n            const color = HSVaColor(...values);\r\n\r\n            // Create new swatch HTMLElement\r\n            const el = _.createElementFromString(\r\n                `<button type=\"button\" style=\"color: ${color.toRGBA().toString(0)}\" aria-label=\"${this._t('btn:swatch')}\"/>`\r\n            );\r\n\r\n            // Append element and save swatch data\r\n            _root.swatches.appendChild(el);\r\n            _swatchColors.push({el, color});\r\n\r\n            // Bind event\r\n            this._eventBindings.push(\r\n                _.on(el, 'click', () => {\r\n                    this.setHSVA(...color.toHSVA(), true);\r\n                    this._emit('swatchselect', color);\r\n                    this._emit('change', color);\r\n                })\r\n            );\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Removes a swatch color by it's index\r\n     * @param index\r\n     * @returns {boolean}\r\n     */\r\n    removeSwatch(index) {\r\n        const swatchColor = this._swatchColors[index];\r\n\r\n        // Check swatch data\r\n        if (swatchColor) {\r\n            const {el} = swatchColor;\r\n\r\n            // Remove HTML child and swatch data\r\n            this._root.swatches.removeChild(el);\r\n            this._swatchColors.splice(index, 1);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    applyColor(silent = false) {\r\n        const {preview, button} = this._root;\r\n\r\n        // Change preview and current color\r\n        const cssRGBaString = this._color.toRGBA().toString(0);\r\n        preview.lastColor.style.color = cssRGBaString;\r\n\r\n        // Change only the button color if it isn't customized\r\n        if (!this.options.useAsButton) {\r\n            button.style.color = cssRGBaString;\r\n        }\r\n\r\n        // User changed the color so remove the clear clas\r\n        button.classList.remove('clear');\r\n\r\n        // Save last color\r\n        this._lastColor = this._color.clone();\r\n\r\n        // Fire listener\r\n        if (!this._initializingActive && !silent) {\r\n            this._emit('save', this._color);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Destroy's all functionalitys\r\n     */\r\n    destroy() {\r\n        this._eventBindings.forEach(args => _.off(...args));\r\n\r\n        Object.keys(this._components)\r\n            .forEach(key => this._components[key].destroy());\r\n    }\r\n\r\n    /**\r\n     * Destroy's all functionalitys and removes\r\n     * the pickr element.\r\n     */\r\n    destroyAndRemove() {\r\n        this.destroy();\r\n        const {root, app} = this._root;\r\n\r\n        // Remove element\r\n        if (root.parentElement) {\r\n            root.parentElement.removeChild(root);\r\n        }\r\n\r\n        // Remove .pcr-app\r\n        app.parentElement.removeChild(app);\r\n\r\n        // There are references to various DOM elements stored in the pickr instance\r\n        // This cleans all of them to avoid detached DOMs\r\n        Object.keys(this)\r\n            .forEach(key => this[key] = null);\r\n    }\r\n\r\n    /**\r\n     * Hides the color-picker ui.\r\n     */\r\n    hide() {\r\n        this._root.app.classList.remove('visible');\r\n        this._emit('hide', this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Shows the color-picker ui.\r\n     */\r\n    show() {\r\n\r\n        if (!this.options.disabled) {\r\n            this._root.app.classList.add('visible');\r\n            this._rePositioningPicker();\r\n            this._emit('show', this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @return {boolean} If the color picker is currently open\r\n     */\r\n    isOpen() {\r\n        return this._root.app.classList.contains('visible');\r\n    }\r\n\r\n    /**\r\n     * Set a specific color.\r\n     * @param h Hue\r\n     * @param s Saturation\r\n     * @param v Value\r\n     * @param a Alpha channel (0 - 1)\r\n     * @param silent If the button should not change the color\r\n     * @return boolean if the color has been accepted\r\n     */\r\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\r\n\r\n        // Deactivate color calculation\r\n        const recalc = this._recalc; // Save state\r\n        this._recalc = false;\r\n\r\n        // Validate input\r\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\r\n            return false;\r\n        }\r\n\r\n        // Override current color and re-active color calculation\r\n        this._color = HSVaColor(h, s, v, a);\r\n\r\n        // Update slider and palette\r\n        const {hue, opacity, palette} = this._components;\r\n        hue.update((h / 360));\r\n        opacity.update(a);\r\n        palette.update(s / 100, 1 - (v / 100));\r\n\r\n        // Check if call is silent\r\n        if (!silent) {\r\n            this.applyColor();\r\n        }\r\n\r\n        // Update output if recalculation is enabled\r\n        if (recalc) {\r\n            this._updateOutput();\r\n        }\r\n\r\n        // Restore old state\r\n        this._recalc = recalc;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Tries to parse a string which represents a color.\r\n     * Examples: #fff\r\n     *           rgb 10 10 200\r\n     *           hsva 10 20 5 0.5\r\n     * @param string\r\n     * @param silent\r\n     */\r\n    setColor(string, silent = false) {\r\n\r\n        // Check if null\r\n        if (string === null) {\r\n            this._clearColor(silent);\r\n            return true;\r\n        }\r\n\r\n        const {values, type} = this._parseLocalColor(string);\r\n\r\n        // Check if color is ok\r\n        if (values) {\r\n\r\n            // Change selected color format\r\n            const utype = type.toUpperCase();\r\n            const {options} = this._root.interaction;\r\n            const target = options.find(el => el.getAttribute('data-type') === utype);\r\n\r\n            // Auto select only if not hidden\r\n            if (target && !target.hidden) {\r\n                for (const el of options) {\r\n                    el.classList[el === target ? 'add' : 'remove']('active');\r\n                }\r\n            }\r\n\r\n            // Update color (fires 'save' event if silent is 'false')\r\n            if (!this.setHSVA(...values, silent)) {\r\n                return false;\r\n            }\r\n\r\n            // Update representation (fires 'change' event)\r\n            return this.setColorRepresentation(utype);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Changes the color _representation.\r\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\r\n     * @param type\r\n     * @returns {boolean} if the selected type was valid.\r\n     */\r\n    setColorRepresentation(type) {\r\n\r\n        // Force uppercase to allow a case-sensitiv comparison\r\n        type = type.toUpperCase();\r\n\r\n        // Find button with given type and trigger click event\r\n        return !!this._root.interaction.options\r\n            .find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\r\n    }\r\n\r\n    /**\r\n     * Returns the current color representaion. See setColorRepresentation\r\n     * @returns {*}\r\n     */\r\n    getColorRepresentation() {\r\n        return this._representation;\r\n    }\r\n\r\n    /**\r\n     * @returns HSVaColor Current HSVaColor object.\r\n     */\r\n    getColor() {\r\n        return this._color;\r\n    }\r\n\r\n    /**\r\n     * Returns the currently selected color.\r\n     * @returns {{a, toHSVA, toHEXA, s, v, h, clone, toCMYK, toHSLA, toRGBA}}\r\n     */\r\n    getSelectedColor() {\r\n        return this._lastColor;\r\n    }\r\n\r\n    /**\r\n     * @returns The root HTMLElement with all his components.\r\n     */\r\n    getRoot() {\r\n        return this._root;\r\n    }\r\n\r\n    /**\r\n     * Disable pickr\r\n     */\r\n    disable() {\r\n        this.hide();\r\n        this.options.disabled = true;\r\n        this._root.button.classList.add('disabled');\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Enable pickr\r\n     */\r\n    enable() {\r\n        this.options.disabled = false;\r\n        this._root.button.classList.remove('disabled');\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default Pickr;\r\n","import * as _ from './utils/utils';\r\n\r\nexport default instance => {\r\n\r\n    const {\r\n        components,\r\n        useAsButton,\r\n        inline,\r\n        appClass,\r\n        theme,\r\n        lockOpacity\r\n    } = instance.options;\r\n\r\n    // Utils\r\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\r\n    const t = str => instance._t(str);\r\n\r\n    const root = _.createFromTemplate(`\r\n      <div :ref=\"root\" class=\"pickr\">\r\n\r\n        ${useAsButton ? '' : '<button type=\"button\" :ref=\"button\" class=\"pcr-button\"></button>'}\r\n\r\n        <div :ref=\"app\" class=\"pcr-app ${appClass || ''}\" data-theme=\"${theme}\" ${inline ? 'style=\"position: unset\"' : ''} aria-label=\"${t('ui:dialog', 'color picker dialog')}\" role=\"window\">\r\n          <div class=\"pcr-selection\" ${hidden(components.palette)}>\r\n            <div :obj=\"preview\" class=\"pcr-color-preview\" ${hidden(components.preview)}>\r\n              <button type=\"button\" :ref=\"lastColor\" class=\"pcr-last-color\" aria-label=\"${t('btn:last-color')}\"></button>\r\n              <div :ref=\"currentColor\" class=\"pcr-current-color\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"palette\" class=\"pcr-color-palette\">\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"palette\" class=\"pcr-palette\" tabindex=\"0\" aria-label=\"${t('aria:palette')}\" role=\"listbox\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"hue\" class=\"pcr-color-chooser\" ${hidden(components.hue)}>\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"slider\" class=\"pcr-hue pcr-slider\" tabindex=\"0\" aria-label=\"${t('aria:hue')}\" role=\"slider\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"opacity\" class=\"pcr-color-opacity\" ${hidden(components.opacity)}>\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"slider\" class=\"pcr-opacity pcr-slider\" tabindex=\"0\" aria-label=\"${t('aria:opacity', 'opacity selection slider')}\" role=\"slider\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pcr-swatches ${components.palette ? '' : 'pcr-last'}\" :ref=\"swatches\"></div>\r\n\r\n          <div :obj=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(components.interaction).length)}>\r\n            <input :ref=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(components.interaction.input)} aria-label=\"${t('aria:input', 'color input field')}\">\r\n\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"${lockOpacity ? 'HEX' : 'HEXA'}\" type=\"button\" ${hidden(components.interaction.hex)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"${lockOpacity ? 'RGB' : 'RGBA'}\" type=\"button\" ${hidden(components.interaction.rgba)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"${lockOpacity ? 'HSL' : 'HSLA'}\" type=\"button\" ${hidden(components.interaction.hsla)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"${lockOpacity ? 'HSV' : 'HSVA'}\" type=\"button\" ${hidden(components.interaction.hsva)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(components.interaction.cmyk)}>\r\n\r\n            <input :ref=\"save\" class=\"pcr-save\" value=\"${t('btn:save')}\" type=\"button\" ${hidden(components.interaction.save)} aria-label=\"${t('aria:btn:save')}\">\r\n            <input :ref=\"cancel\" class=\"pcr-cancel\" value=\"${t('btn:cancel')}\" type=\"button\" ${hidden(components.interaction.cancel)} aria-label=\"${t('aria:btn:cancel')}\">\r\n            <input :ref=\"clear\" class=\"pcr-clear\" value=\"${t('btn:clear')}\" type=\"button\" ${hidden(components.interaction.clear)} aria-label=\"${t('aria:btn:clear')}\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    const int = root.interaction;\r\n\r\n    // Select option which is not hidden\r\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\r\n\r\n    // Append method to find currently active option\r\n    int.type = () => int.options.find(e => e.classList.contains('active'));\r\n    return root;\r\n};\r\n"],"sourceRoot":""}